# Install and load the "dplyr" library
library("dplyr")
install.packages("devtools")
String oneName = "Carol";
String otherName = "Chartllote";
String displayed ="";
int interval = 2000; // 2s
int time;
PFont font;
void setup() {
size(300, 300);
font = createFont("arial", 26);
background(0);
displayed = oneName;
time = millis();
textFont(font);
fill(255);
}
void draw() {
background(0);
text(displayed, width/2 - textWidth(displayed)/2, height/2);
if (millis() - time > interval) {
displayed = displayed.equals(oneName)? otherName:oneName;
time  = millis();
}
}
devtools::install_github("hadley/fueleconomy")
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
View(fueleconomy)
is.data.frame(fueleconomy)
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct_car_manu <- distinct(vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct_car_manu <- sum(distinct(vehicles, make))
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct_car_manu <- nrow(distinct(vehicles, make))
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- nrow(select(vehicles, make))
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- select(vehicles, make)
# Filter the data set for vehicles manufactured in 1997
manu_1997 <- filter(vehicles, year = 1997)
# Filter the data set for vehicles manufactured in 1997
manu_1997 <- filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
hwy_1997 <- arrange(manu_1997, hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
avg_mileage_1997 <- mutate(manu_1997, average = (hwy + cty) / 2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
specific <- (vehicles, drive == 2-Wheel Drive, cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
specific <- (vehicles, drive == 2-Wheel Drive, cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
specific <- filter(vehicles, drive == 2-Wheel Drive, cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
specific <- filter(vehicles, drive == "2-Wheel Drive", cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_mpg <- filter(vehicles, drive == "2-Wheel Drive", cty > 20)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy_mpg <- filter(two_wheel_20_mpg, hwy == min(hwy))
worst_hwy_mpg_ID <- worst_hwy_mpg$id
test <- select(worst_hwy_mpg, id)
